{"version":3,"sources":["1-3/pages/playground/Playground_Generator.js","../node_modules/reactstrap/es/Badge.js"],"names":["Playground_Generator","props","isValid","v","this","setState","jsonis_valid","bind","onChange","e","target","name","jsonObj","JSON","parse","value","isValidDesignJSON","state","mode","json","valueObj","valueValid","isValidValueJSON","sep","is_valid","obj","onChangeGen","valid","stringify","onClear","fatal_error_msg","size","sm","req_indicator","onChangeBool","checked","className","type","bsSize","style","float","length","color","onClick","fatal_error","icon","viewBox","fill","d","text","Component","propTypes","PropTypes","string","pill","bool","tag","tagPropType","innerRef","oneOfType","object","func","children","node","cssModule","Badge","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","href","React","createElement","_extends","ref","defaultProps"],"mappings":"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","file":"static/js/30.5801e6f2.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { CustomInput, Input, Label, FormGroup, Row, Col, Button, Badge } from 'reactstrap';\r\nimport { JOFGENGenerator, isValidDesignJSON, isValidValueJSON } from '../../lib';\r\nimport '../../lib/css/generator.css';\r\nimport Icon from '@mdi/react';\r\nimport { local_urls } from '../../urls';\r\n\r\nexport default class Playground_Generator extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fatal_error_msg: \"Ooops... Something went wrong. Unable to render form.\",\r\n            jsonObj: [],\r\n            json: \"\",\r\n            jsonis_valid: true,\r\n            valueObj: [],\r\n            value: \"\",\r\n            mode: \"linear\",\r\n            size: \"sm\",\r\n            sep: \":\",      \r\n            sm: \"12\",        \r\n            req_indicator: \"*\",       \r\n            is_valid: true\r\n        };\r\n    }\r\n\r\n    isValid = function(v)\r\n    {\r\n        this.setState({ jsonis_valid: v });\r\n    }.bind(this)\r\n\r\n    onChange = function (e) {\r\n        switch (e.target.name) {\r\n            case 'json':\r\n                var jsonObj;\r\n                var jsonis_valid;\r\n                try {\r\n                    jsonObj = JSON.parse(e.target.value);\r\n                    jsonis_valid = isValidDesignJSON(jsonObj,this.state.mode)\r\n                }\r\n                catch\r\n                {\r\n                    jsonObj = e.target.value;\r\n                    jsonis_valid = false;\r\n                }\r\n\r\n                this.setState({\r\n                    json: e.target.value,\r\n                    jsonObj: jsonObj,                    \r\n                    jsonis_valid: jsonis_valid\r\n                });\r\n                break;\r\n\r\n            case 'value':\r\n                var valueObj;\r\n                var valueValid;\r\n                try {\r\n                    valueObj = JSON.parse(e.target.value);\r\n                    valueValid = isValidValueJSON(this.state.jsonObj, valueObj, this.state.mode, this.state.sep);\r\n                }\r\n                catch\r\n                {\r\n                    valueObj = e.target.value;\r\n                    valueValid = false;\r\n                }\r\n\r\n                this.setState({\r\n                    value: e.target.value,\r\n                    valueObj: valueObj,\r\n                    is_valid: valueValid\r\n                });\r\n                break;\r\n\r\n            default:\r\n                var obj = {};\r\n                obj[e.target.name] = e.target.value;\r\n                this.setState(obj);\r\n        }\r\n    }.bind(this)\r\n\r\n    onChangeGen = function (value, valid) {\r\n        this.setState({\r\n            valueObj: value,\r\n            is_valid: valid,\r\n            value: JSON.stringify(value)\r\n        })\r\n    }.bind(this)\r\n\r\n    onClear = function () {\r\n        this.setState({\r\n            fatal_error_msg: \"Ooops... Something went wrong. Unable to render form.\",\r\n            jsonObj: [],\r\n            json: \"\",\r\n            jsonis_valid: true,\r\n            valueObj: [],\r\n            value: \"\",\r\n            is_valid: true,\r\n            mode: \"linear\",\r\n            size: \"sm\",\r\n            sep: \":\",\r\n            sm: \"12\",\r\n            req_indicator: \"*\"\r\n        });\r\n    }.bind(this)\r\n\r\n    onChangeBool = function (e) {\r\n        var state = {};\r\n        state[e.target.name] = e.target.checked;\r\n        this.setState(state);\r\n    }.bind(this)\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <section>\r\n                    <div className=\"mt-3\">\r\n                        <Row>\r\n                            <Col className=\"mx-300\">\r\n                                <div className=\"p-4 card filter\">\r\n                                    <div className=\"title\">Properties</div>\r\n                                    <FormGroup className=\"pt-1\">\r\n                                        <Label>fatal_error.text</Label>\r\n                                        <Input type=\"text\" bsSize=\"sm\" name=\"fatal_error_msg\" value={this.state.fatal_error_msg} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>json</Label>\r\n                                        <div style={{ float:'right' }}>\r\n                                            {(this.state.jsonis_valid || this.state.json.length === 0)?<Badge color=\"success\">Valid</Badge>:<Badge color=\"danger\">Invalid</Badge>}\r\n                                        </div>\r\n                                        <Input type=\"textarea\" bsSize=\"sm\" name=\"json\" value={this.state.json} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>mode</Label>\r\n                                        <CustomInput type=\"select\" bsSize=\"sm\" name=\"mode\" value={this.state.mode} onChange={this.onChange}>\r\n                                            <option value=\"linear\">linear</option>\r\n                                            <option value=\"linear_merge\">linear_merge</option>\r\n                                            <option value=\"tree\">tree</option>\r\n                                        </CustomInput>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>size</Label>\r\n                                        <CustomInput type=\"select\" bsSize=\"sm\" name=\"size\" value={this.state.size} onChange={this.onChange}>\r\n                                            <option value=\"sm\">small</option>\r\n                                            <option value=\"lg\">large</option>\r\n                                        </CustomInput>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>req_indicator</Label>\r\n                                        <Input type=\"text\" bsSize=\"sm\" name=\"req_indicator\" value={this.state.req_indicator} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>sep</Label>\r\n                                        <Input type=\"text\" bsSize=\"sm\" name=\"sep\" value={this.state.sep} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>sm</Label>\r\n                                        <CustomInput type=\"select\" bsSize=\"sm\" name=\"sm\" value={this.state.sm} onChange={this.onChange}>\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                            <option value=\"6\">6</option>\r\n                                            <option value=\"7\">7</option>\r\n                                            <option value=\"8\">8</option>\r\n                                            <option value=\"9\">9</option>\r\n                                            <option value=\"10\">10</option>\r\n                                            <option value=\"11\">11</option>\r\n                                            <option value=\"12\">12</option>\r\n                                        </CustomInput>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>value</Label>\r\n                                        <div style={{ float:'right' }}>\r\n                                            {(this.state.is_valid || this.state.value.length === 0)?<Badge color=\"success\">Valid</Badge>:<Badge color=\"danger\">Invalid</Badge>}\r\n                                        </div>\r\n                                        <Input type=\"textarea\" bsSize=\"sm\" name=\"value\" value={this.state.value} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <div className=\"mt-3 btns text-right\">\r\n                                        <Button color=\"link\" size=\"sm\" onClick={this.onClear} >Clear</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col>\r\n                                <div className=\"p-2\">\r\n                                    <JOFGENGenerator\r\n                                        sep={(this.state.sep)?this.state.sep:\":\"}\r\n                                        sm={this.state.sm}\r\n                                        size={this.state.size}\r\n                                        mode={this.state.mode}\r\n                                        fatal_error={\r\n                                            {\r\n                                                icon: <svg className=\"jofgen-icon jofgen-icon-fatal-error\" viewBox='2 2 25 25'><path fill='#ced4da' d='M22.1 21.5L2.4 1.7L1.1 3L7.9 9.8L3.5 17.4C3.2 17.8 3 18.4 3 19C3 20.7 4.3 22 6 22H18C18.6 22 19.2 21.8 19.6 21.5L20.8 22.7L22.1 21.5M18 20H6C5.4 20 5 19.6 5 19C5 18.8 5.1 18.6 5.2 18.4L9.4 11.2L13.6 15.4L13 16L10.4 13.4L7.7 18H16.1L18 20C18.1 20 18 20 18 20M11 7.8L8 4.8V4C8 2.9 8.9 2 10 2H14C15.1 2 16 2.9 16 4V5C16 5.6 15.6 6 15 6V7.8L20.4 17.2L15 11.8L13 8.4V4H11V7.8Z' /></svg>,\r\n                                                text: (this.state.fatal_error_msg) ? this.state.fatal_error_msg : \"Ooops... Something went wrong. Unable to render form.\"\r\n                                            }\r\n                                        }\r\n                                        json={(this.state.json) ? this.state.jsonObj : []}\r\n                                        value={(this.state.value) ? this.state.valueObj : {}}\r\n                                        isValid={this.isValid}\r\n                                        onChange={this.onChangeGen} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </section>\r\n            </Fragment>\r\n        );\r\n\r\n    }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"sourceRoot":""}