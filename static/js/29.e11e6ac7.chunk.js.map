{"version":3,"sources":["1-3/pages/playground/Playground_Designer.js","../node_modules/reactstrap/es/Badge.js"],"names":["Playground_Designer","props","onChange","e","target","name","jsonObj","isValid","JSON","parse","value","isValidDesignJSON","this","state","mode","setState","json","is_valid","obj","bind","onChangeDesigner","valid","stringify","onClear","export","extended","fatal_error_msg","size","translation","title","onChangeBool","checked","className","check","type","hideDissabled","bsSize","style","float","length","color","onClick","undefined","Component","propTypes","PropTypes","string","pill","bool","tag","tagPropType","innerRef","oneOfType","object","func","children","node","cssModule","Badge","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","href","React","createElement","_extends","ref","defaultProps"],"mappings":"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","file":"static/js/29.e11e6ac7.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { CustomInput, Input, Label, FormGroup, Row, Col, Button, Badge } from 'reactstrap';\r\nimport { JOFGENDesigner, isValidDesignJSON } from '../../lib';\r\nimport '../../lib/css/designer.css';\r\nimport Icon from '@mdi/react';\r\nimport { local_urls } from '../../urls';\r\n\r\nexport default class Playground_Designer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            export: false,\r\n            extended: false,\r\n            fatal_error_msg: \"Ooops... Something went wrong. Unable to render designer.\",\r\n            json: \"\",\r\n            jsonObj: [],\r\n            mode: \"linear\",\r\n            size: \"sm\",\r\n            title: \"Designer\",\r\n            is_valid: true,\r\n            translation: \"\"\r\n        };\r\n    }\r\n\r\n    onChange = function (e) {\r\n        if (e.target.name === 'json')\r\n        {\r\n            var jsonObj;\r\n            var isValid;\r\n            try\r\n            {\r\n                jsonObj = JSON.parse(e.target.value);\r\n                isValid = isValidDesignJSON(jsonObj, this.state.mode);\r\n            }\r\n            catch\r\n            {\r\n                jsonObj = e.target.value;\r\n                isValid = false;\r\n            }\r\n\r\n            this.setState({\r\n                json: e.target.value,\r\n                jsonObj: jsonObj,\r\n                is_valid: isValid\r\n            });\r\n        }\r\n        else\r\n        {\r\n            var obj = {};\r\n            obj[e.target.name] = e.target.value;\r\n            this.setState(obj);\r\n        }\r\n    }.bind(this)\r\n\r\n    onChangeDesigner = function (json, valid) {\r\n        this.setState({\r\n            jsonObj: json,\r\n            is_valid: valid,\r\n            json: JSON.stringify(json)\r\n        })\r\n    }.bind(this)\r\n\r\n    onClear = function()\r\n    {\r\n        this.setState({\r\n            export: false,\r\n            extended: false,\r\n            fatal_error_msg: \"Ooops... Something went wrong. Unable to render designer.\",\r\n            jsonObj: [],\r\n            json: \"\",\r\n            mode: \"linear\",\r\n            size: \"sm\",\r\n            translation: \"\",\r\n            title: \"Designer\",\r\n            is_valid: true\r\n        });\r\n    }.bind(this)\r\n    \r\n    onChangeBool = function (e) {\r\n        var state = {};\r\n        state[e.target.name] = e.target.checked;\r\n        this.setState(state);\r\n    }.bind(this)\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <section>\r\n                    <div className=\"mt-3\">\r\n                        <Row>\r\n                            <Col className=\"mx-300\">\r\n                                <div className=\"p-4 card filter\">\r\n                                    <div className=\"title\">Properties</div>\r\n                                    <FormGroup className=\"pt-1\" check>\r\n                                        <Label check>\r\n                                            <Input name=\"export\" type=\"checkbox\" onChange={this.onChangeBool} checked={this.state.export} />{' '}\r\n                                            export\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input name=\"extended\" type=\"checkbox\" onChange={this.onChangeBool} checked={this.state.extended} />{' '}\r\n                                            extended\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input name=\"hideDissabled\" type=\"checkbox\" onChange={this.onChangeBool} checked={this.state.hideDissabled} />{' '}\r\n                                            hideDissabled\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"pt-2\">\r\n                                        <Label>fatal_error_msg</Label>\r\n                                        <Input type=\"text\" bsSize=\"sm\" name=\"fatal_error_msg\" value={this.state.fatal_error_msg} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>json</Label>\r\n                                        <div style={{ float:'right' }}>\r\n                                            {(this.state.is_valid || this.state.json.length === 0)?<Badge color=\"success\">Valid</Badge>:<Badge color=\"danger\">Invalid</Badge>}\r\n                                        </div>\r\n                                        <Input type=\"textarea\" bsSize=\"sm\" name=\"json\" value={this.state.json} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>mode</Label>\r\n                                        <CustomInput type=\"select\" bsSize=\"sm\" name=\"mode\" value={this.state.mode} onChange={this.onChange}>\r\n                                            <option value=\"linear\">linear</option>\r\n                                            <option value=\"linear_merge\">linear_merge</option>\r\n                                            <option value=\"tree\">tree</option>\r\n                                        </CustomInput>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>size</Label>\r\n                                        <CustomInput type=\"select\" bsSize=\"sm\" name=\"size\" value={this.state.size} onChange={this.onChange}>\r\n                                            <option value=\"sm\">small</option>\r\n                                            <option value=\"lg\">large</option>\r\n                                        </CustomInput>\r\n                                    </FormGroup>\r\n                                    <FormGroup className=\"pt-2\">\r\n                                        <Label>title</Label>\r\n                                        <Input type=\"text\" bsSize=\"sm\" name=\"title\" value={this.state.title} onChange={this.onChange} />\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <Label>translation</Label>\r\n                                        <Input type=\"textarea\" bsSize=\"sm\" name=\"translation\" value={this.state.translation} onChange={this.onChange} />\r\n                                    </FormGroup>                               \r\n                                    <div className=\"mt-3 btns text-right\">\r\n                                        <Button color=\"link\" size=\"sm\" onClick={this.onClear} >Clear</Button>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                                <Col>\r\n                                    <div className=\"p-2\">\r\n                                        <JOFGENDesigner \r\n                                            export={this.state.export}\r\n                                            extended={this.state.extended}\r\n                                            title={(this.state.title)?this.state.title:undefined} \r\n                                            translation={(this.state.translation)?JSON.parse(this.state.translation):undefined} \r\n                                            size={this.state.size}                                            \r\n                                            mode={this.state.mode} \r\n                                            fatal_error_msg={(this.state.fatal_error_msg)?this.state.fatal_error_msg:undefined}\r\n                                            json={(this.state.json)?this.state.jsonObj:[]} \r\n                                            hideDissabled={this.state.hideDissabled}\r\n                                            onChange={this.onChangeDesigner} />\r\n                                    </div>\r\n                                </Col>\r\n                        </Row>\r\n                    </div>\r\n                </section>\r\n            </Fragment>\r\n        );\r\n\r\n    }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  color: PropTypes.string,\n  pill: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.propTypes = propTypes;\nBadge.defaultProps = defaultProps;\nexport default Badge;"],"sourceRoot":""}